Before class starts, make sure you've watched the lab instruction
video and done the exercises here:

https://powerfulpython.com/labs/

Below is a text summary:

This course features programming exercises, called "labs". They are
*not optional* and are a critical part of your learning in this class.

Most labs are structured as a single Python file. When you unzip your
courseware, you'll find a folder called "labs", and inside, two
folders "py2" and "py3". Use the "py3" version if you have Python 3
installed; if you only have Python 2.7, use "py2".

When you open the lab file, you'll see a multiline string at the
beginning, containing some explanatory text mixed in with what looks
like copy-pasting from a Python interpreter prompt. Those copy-pastes
actually define unit tests. Your job is to write Python code to make
them pass.

How do you run the unit tests? Just run the lab file like any Python
program - in your IDE, or on the command line. The file contains a
test harness that finds and executes all the unit tests.

Now, at first, all the unit tests fail, and each failing test produces
a stack trace. In fact, some of these labs will overwhelm you with
something like 20 stack traces (failing testS) at first.

*Always focus on the first one.* Write code to make the first unit
test pass. So you scroll up in the IDE output window; or if you work
on the command line, you can either pipe it to a pager like "less" or
"more", or simply scroll up in the terminal window.

When you make that first failing unit test pass, that often cascades
to make others pass too. So if you see an error like "NameError: name
'foo' is not defined", because it's calling a function "foo", you
need to define it.

To do this, open the lab file, and scroll down to where it says "Write
your Python code here". Write your python code there! Define the
function, "def foo(...)", giving it whatever arguments it needs to
take, and writing code in the function body, to make the tests pass.

Your lab will tell you when all the tests pass. When they do, go to
the extra credit (if there is one for this lab).

To help you out, you have solutions. In your courseware, beside the
folder called "labs", there's a folder called "solutions". And you
want to use them wisely. The best approach I've found: don't look at
the solution *at all*, at first. Get as far as you can in the lab on
your own.

If you can get it to pass, high five!  Then, afterwards, compare what
you wrote to the official solution. Is anything different? If so, that
can teach you something.

Now, what if you are working on the lab, you get stuck? Give yourself
a hint by *peeking* at the solution. Open the solution file, and look
at it just enough for the "light bulb" to go off. So you say to
yourself, "Aha! I know what to do next."

Then, I suggest you *close* the solution file. So you are not tempted
to look at it any more than you need to. Then you keep going in the
lab, and if you need to give yourself another hint, peek at the
solution again.

You get the idea? The more work you can do on your own, without using
the solution as a crutch, the more you will learn, and more deeply.

Just remember: when you do finish the lab, always compare it to the
official solution. That will often give you new insights, and teach
you more.
